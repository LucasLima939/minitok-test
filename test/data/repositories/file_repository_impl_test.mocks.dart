// Mocks generated by Mockito 5.4.4 from annotations
// in minitok_test/test/data/repositories/file_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i6;
import 'dart:typed_data' as _i9;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:firebase_storage/firebase_storage.dart' as _i3;
import 'package:minitok_test/infra/adapters/firebase_auth_adapter.dart' as _i8;
import 'package:minitok_test/infra/adapters/firebase_storage_adapter.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserCredential_0 extends _i1.SmartFake
    implements _i2.UserCredential {
  _FakeUserCredential_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseStorage_1 extends _i1.SmartFake
    implements _i3.FirebaseStorage {
  _FakeFirebaseStorage_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReference_2 extends _i1.SmartFake implements _i3.Reference {
  _FakeReference_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFullMetadata_3 extends _i1.SmartFake implements _i3.FullMetadata {
  _FakeFullMetadata_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListResult_4 extends _i1.SmartFake implements _i3.ListResult {
  _FakeListResult_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUploadTask_5 extends _i1.SmartFake implements _i3.UploadTask {
  _FakeUploadTask_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDownloadTask_6 extends _i1.SmartFake implements _i3.DownloadTask {
  _FakeDownloadTask_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserMetadata_7 extends _i1.SmartFake implements _i2.UserMetadata {
  _FakeUserMetadata_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFactor_8 extends _i1.SmartFake implements _i2.MultiFactor {
  _FakeMultiFactor_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdTokenResult_9 extends _i1.SmartFake implements _i2.IdTokenResult {
  _FakeIdTokenResult_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_10 extends _i1.SmartFake
    implements _i2.ConfirmationResult {
  _FakeConfirmationResult_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_11 extends _i1.SmartFake implements _i2.User {
  _FakeUser_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseStorageAdapter].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseStorageAdapter extends _i1.Mock
    implements _i4.FirebaseStorageAdapter {
  MockFirebaseStorageAdapter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<String> uploadFile({
    required _i6.File? file,
    required String? path,
    required String? fileName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFile,
          [],
          {
            #file: file,
            #path: path,
            #fileName: fileName,
          },
        ),
        returnValue: _i5.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #uploadFile,
            [],
            {
              #file: file,
              #path: path,
              #fileName: fileName,
            },
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<void> deleteFile(String? filePath) => (super.noSuchMethod(
        Invocation.method(
          #deleteFile,
          [filePath],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String> getDownloadUrl(String? filePath) => (super.noSuchMethod(
        Invocation.method(
          #getDownloadUrl,
          [filePath],
        ),
        returnValue: _i5.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #getDownloadUrl,
            [filePath],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<List<_i3.Reference>> listFiles(String? path) =>
      (super.noSuchMethod(
        Invocation.method(
          #listFiles,
          [path],
        ),
        returnValue: _i5.Future<List<_i3.Reference>>.value(<_i3.Reference>[]),
      ) as _i5.Future<List<_i3.Reference>>);
}

/// A class which mocks [FirebaseAuthAdapter].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthAdapter extends _i1.Mock
    implements _i8.FirebaseAuthAdapter {
  MockFirebaseAuthAdapter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i2.User?> get authStateChanges => (super.noSuchMethod(
        Invocation.getter(#authStateChanges),
        returnValue: _i5.Stream<_i2.User?>.empty(),
      ) as _i5.Stream<_i2.User?>);

  @override
  _i5.Future<_i2.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i5.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<_i2.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i5.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [FullMetadata].
///
/// See the documentation for Mockito's code generation for more information.
class MockFullMetadata extends _i1.Mock implements _i3.FullMetadata {
  MockFullMetadata() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get fullPath => (super.noSuchMethod(
        Invocation.getter(#fullPath),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#fullPath),
        ),
      ) as String);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);
}

/// A class which mocks [Reference].
///
/// See the documentation for Mockito's code generation for more information.
class MockReference extends _i1.Mock implements _i3.Reference {
  MockReference() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FirebaseStorage get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeFirebaseStorage_1(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i3.FirebaseStorage);

  @override
  String get bucket => (super.noSuchMethod(
        Invocation.getter(#bucket),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#bucket),
        ),
      ) as String);

  @override
  String get fullPath => (super.noSuchMethod(
        Invocation.getter(#fullPath),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#fullPath),
        ),
      ) as String);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  _i3.Reference get root => (super.noSuchMethod(
        Invocation.getter(#root),
        returnValue: _FakeReference_2(
          this,
          Invocation.getter(#root),
        ),
      ) as _i3.Reference);

  @override
  _i3.Reference child(String? path) => (super.noSuchMethod(
        Invocation.method(
          #child,
          [path],
        ),
        returnValue: _FakeReference_2(
          this,
          Invocation.method(
            #child,
            [path],
          ),
        ),
      ) as _i3.Reference);

  @override
  _i5.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String> getDownloadURL() => (super.noSuchMethod(
        Invocation.method(
          #getDownloadURL,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #getDownloadURL,
            [],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<_i3.FullMetadata> getMetadata() => (super.noSuchMethod(
        Invocation.method(
          #getMetadata,
          [],
        ),
        returnValue: _i5.Future<_i3.FullMetadata>.value(_FakeFullMetadata_3(
          this,
          Invocation.method(
            #getMetadata,
            [],
          ),
        )),
      ) as _i5.Future<_i3.FullMetadata>);

  @override
  _i5.Future<_i3.ListResult> list([_i3.ListOptions? options]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [options],
        ),
        returnValue: _i5.Future<_i3.ListResult>.value(_FakeListResult_4(
          this,
          Invocation.method(
            #list,
            [options],
          ),
        )),
      ) as _i5.Future<_i3.ListResult>);

  @override
  _i5.Future<_i3.ListResult> listAll() => (super.noSuchMethod(
        Invocation.method(
          #listAll,
          [],
        ),
        returnValue: _i5.Future<_i3.ListResult>.value(_FakeListResult_4(
          this,
          Invocation.method(
            #listAll,
            [],
          ),
        )),
      ) as _i5.Future<_i3.ListResult>);

  @override
  _i5.Future<_i9.Uint8List?> getData([int? maxSize = 10485760]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [maxSize],
        ),
        returnValue: _i5.Future<_i9.Uint8List?>.value(),
      ) as _i5.Future<_i9.Uint8List?>);

  @override
  _i3.UploadTask putData(
    _i9.Uint8List? data, [
    _i3.SettableMetadata? metadata,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #putData,
          [
            data,
            metadata,
          ],
        ),
        returnValue: _FakeUploadTask_5(
          this,
          Invocation.method(
            #putData,
            [
              data,
              metadata,
            ],
          ),
        ),
      ) as _i3.UploadTask);

  @override
  _i3.UploadTask putBlob(
    dynamic blob, [
    _i3.SettableMetadata? metadata,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBlob,
          [
            blob,
            metadata,
          ],
        ),
        returnValue: _FakeUploadTask_5(
          this,
          Invocation.method(
            #putBlob,
            [
              blob,
              metadata,
            ],
          ),
        ),
      ) as _i3.UploadTask);

  @override
  _i3.UploadTask putFile(
    _i6.File? file, [
    _i3.SettableMetadata? metadata,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #putFile,
          [
            file,
            metadata,
          ],
        ),
        returnValue: _FakeUploadTask_5(
          this,
          Invocation.method(
            #putFile,
            [
              file,
              metadata,
            ],
          ),
        ),
      ) as _i3.UploadTask);

  @override
  _i3.UploadTask putString(
    String? data, {
    _i3.PutStringFormat? format = _i3.PutStringFormat.raw,
    _i3.SettableMetadata? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putString,
          [data],
          {
            #format: format,
            #metadata: metadata,
          },
        ),
        returnValue: _FakeUploadTask_5(
          this,
          Invocation.method(
            #putString,
            [data],
            {
              #format: format,
              #metadata: metadata,
            },
          ),
        ),
      ) as _i3.UploadTask);

  @override
  _i5.Future<_i3.FullMetadata> updateMetadata(_i3.SettableMetadata? metadata) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMetadata,
          [metadata],
        ),
        returnValue: _i5.Future<_i3.FullMetadata>.value(_FakeFullMetadata_3(
          this,
          Invocation.method(
            #updateMetadata,
            [metadata],
          ),
        )),
      ) as _i5.Future<_i3.FullMetadata>);

  @override
  _i3.DownloadTask writeToFile(_i6.File? file) => (super.noSuchMethod(
        Invocation.method(
          #writeToFile,
          [file],
        ),
        returnValue: _FakeDownloadTask_6(
          this,
          Invocation.method(
            #writeToFile,
            [file],
          ),
        ),
      ) as _i3.DownloadTask);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified => (super.noSuchMethod(
        Invocation.getter(#emailVerified),
        returnValue: false,
      ) as bool);

  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
      ) as bool);

  @override
  _i2.UserMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeUserMetadata_7(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i2.UserMetadata);

  @override
  List<_i2.UserInfo> get providerData => (super.noSuchMethod(
        Invocation.getter(#providerData),
        returnValue: <_i2.UserInfo>[],
      ) as List<_i2.UserInfo>);

  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#uid),
        ),
      ) as String);

  @override
  _i2.MultiFactor get multiFactor => (super.noSuchMethod(
        Invocation.getter(#multiFactor),
        returnValue: _FakeMultiFactor_8(
          this,
          Invocation.getter(#multiFactor),
        ),
      ) as _i2.MultiFactor);

  @override
  _i5.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [forceRefresh],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<_i2.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResult,
          [forceRefresh],
        ),
        returnValue: _i5.Future<_i2.IdTokenResult>.value(_FakeIdTokenResult_9(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
      ) as _i5.Future<_i2.IdTokenResult>);

  @override
  _i5.Future<_i2.UserCredential> linkWithCredential(
          _i2.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithCredential,
          [credential],
        ),
        returnValue: _i5.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
      ) as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<_i2.UserCredential> linkWithProvider(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithProvider,
          [provider],
        ),
        returnValue: _i5.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
      ) as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<_i2.UserCredential> reauthenticateWithProvider(
          _i2.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithProvider,
          [provider],
        ),
        returnValue: _i5.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
      ) as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<_i2.UserCredential> reauthenticateWithPopup(
          _i2.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithPopup,
          [provider],
        ),
        returnValue: _i5.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
      ) as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<void> reauthenticateWithRedirect(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithRedirect,
          [provider],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.UserCredential> linkWithPopup(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPopup,
          [provider],
        ),
        returnValue: _i5.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
      ) as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<void> linkWithRedirect(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithRedirect,
          [provider],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i2.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i5.Future<_i2.ConfirmationResult>.value(_FakeConfirmationResult_10(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i5.Future<_i2.ConfirmationResult>);

  @override
  _i5.Future<_i2.UserCredential> reauthenticateWithCredential(
          _i2.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithCredential,
          [credential],
        ),
        returnValue: _i5.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
      ) as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> sendEmailVerification(
          [_i2.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [actionCodeSettings],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.User> unlink(String? providerId) => (super.noSuchMethod(
        Invocation.method(
          #unlink,
          [providerId],
        ),
        returnValue: _i5.Future<_i2.User>.value(_FakeUser_11(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
      ) as _i5.Future<_i2.User>);

  @override
  _i5.Future<void> updateEmail(String? newEmail) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [newEmail],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updatePhoneNumber(
          _i2.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneCredential],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDisplayName,
          [displayName],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updatePhotoURL(String? photoURL) => (super.noSuchMethod(
        Invocation.method(
          #updatePhotoURL,
          [photoURL],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateProfile({
    String? displayName,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i2.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyBeforeUpdateEmail,
          [
            newEmail,
            actionCodeSettings,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
